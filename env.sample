# Copy this file to .env and modify as needed
# cp env.sample .env

# Application Configuration
APP_ENV=production
APP_DEBUG=false
APP_NAME="3cket PHP Challenge"

# Database Configuration
DB_HOST=db
DB_PORT=3306
DB_DATABASE=3cket_events
DB_USERNAME=3cket_user
DB_PASSWORD=3cket_password
DB_CHARSET=utf8mb4

# Data Source Strategy Configuration
# Available strategies: auto, database_first, csv_first, database_only, csv_only
# - auto: Try database first, fallback to CSV if database fails (recommended)
# - database_first: Try database first, fallback to CSV if database fails
# - csv_first: Try CSV first, fallback to database if CSV fails
# - database_only: Use database only (no fallback)
# - csv_only: Use CSV only (no database)
DATA_SOURCE_STRATEGY=auto

# Cache Configuration  
# Available strategies: auto, redis, memory, inmemory, none, null
# - auto: Try Redis first, fallback to in-memory (recommended for production)
# - redis: Use Redis cache (Redis service included in docker-compose)
# - memory/inmemory: Use in-memory cache (good for single server)
# - none/null: Disable caching entirely (useful for testing/debugging)
CACHE_STRATEGY=auto

# Cache TTL (Time To Live) in seconds
CACHE_TTL=3600

# Cache Key Prefix
CACHE_PREFIX=3cket:

# Redis Configuration (only needed if CACHE_STRATEGY=redis or auto)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DATABASE=0

# Logging Configuration
# Available log levels: DEBUG, INFO, NOTICE, WARNING, ERROR, CRITICAL, ALERT, EMERGENCY
LOG_LEVEL=INFO

# Log format: line or json
LOG_FORMAT=line

# Log handler: file, stdout, stderr, rotating, null
LOG_HANDLER=file 